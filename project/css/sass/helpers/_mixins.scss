// media queries mixins:
@mixin mobileQuery {
    @media (max-width: $mobileWidth) {
        @content;
    }
}
@mixin extraSmallQuery {
    @media (min-width: $mobileWidth) {
        @content;
    }
}
@mixin smallQuery {
    @media (min-width: $samllWidth) {
        @content;
    }
}
@mixin mediumQuery {
    @media (min-width: $mediumWidth) {
        @content;
    }
}
@mixin largeQuery {
    @media (min-width: $largeWidth) {
        @content;
    }
}

// generatePosition gmixin:
@mixin generatePosition($position, $zIndex: 0, $top: 0, $right: 0, $bottom: 0, $left: 0) {
    position: #{$position};
    z-index: $zIndex;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

// borderRadius mixin:
@mixin borderRadius($topLeft, $topRight, $bottomLeft, $bottomRight) {
    border-top-left-radius: $topLeft;
    border-top-right-radius: $topRight;
    border-bottom-left-radius: $bottomLeft;
    border-bottom-right-radius: $bottomRight;
}

// overlay mixin:
@mixin overlay {
    @include generatePosition(absolute, 1, 0, 0, 0, 0);
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
}

// animation mixin:
@mixin keyFram($animtion-name) {
    @-webkit-keyframes #{$animtion-name} {
        @content;
    }
    @-moz-keyframes #{$animtion-name} {
        @content;
    }
    @-o-keyframes #{$animtion-name} {
        @content;
    }
    @keyframes #{$animtion-name} {
        @content;
    }
}

// transition mixin:
@mixin transitionGenerator($prop) {
    transition: $prop 0.5s ease-in-out;
}

// generatePadding mixin:
@mixin downUpPadding($top, $bottom) {
    padding-top: $top;
    padding-bottom: $bottom;
}

// background image mixin:
@mixin bgImage($imgSrc) {
    background: url($imgSrc) center center no-repeat;
    background-size: cover;
}